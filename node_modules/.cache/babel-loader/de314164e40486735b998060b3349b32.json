{"ast":null,"code":"var _jsxFileName = \"F:\\\\todolist\\\\src\\\\components\\\\List\\\\List.jsx\";\nimport React, { Component } from \"react\";\nimport \"./List.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class List extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.change = (state, id) => {\n      return () => {\n        this.setState({\n          [id]: state\n        });\n      };\n    };\n\n    this.alterState = id => {\n      return e => {\n        console.log(id, e.target.checked);\n        this.props.changeCheck(id, e.target.checked);\n      };\n    };\n\n    this.delTodo = id => {\n      const {\n        delTodo\n      } = this.props;\n      delTodo(id);\n    };\n  }\n\n  componentWillMount() {\n    //   在渲染吧前，先预存一个状态的默认值\n    this.props.todo.map(todoObj => {\n      this.setState({\n        [todoObj.id]: false\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    console.log(\"只想到了这里  willUpdate\"); //   在渲染吧前，先预存一个状态的默认值\n\n    props.todo.map(todoObj => {\n      this.setState({\n        [todoObj.id]: false\n      });\n    });\n  } //  点击桥勾选\n\n\n  render() {\n    // 解构赋值，拿到props传过来的数据\n    const {\n      todo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listWrapper\",\n      children: todo.map(todoObj => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: this.state[todoObj.id] ? \"#eee\" : \"white\"\n          },\n          onMouseEnter: this.change(true, todoObj.id),\n          onMouseLeave: this.change(false, todoObj.id),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todoObj.isDone,\n              onChange: this.alterState(todoObj.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todoObj.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              this.delTodo(todoObj.id);\n            },\n            style: {\n              display: this.state[todoObj.id] ? \"inline-block\" : \"none\"\n            },\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, todoObj.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/todolist/src/components/List/List.jsx"],"names":["React","Component","List","change","state","id","setState","alterState","e","console","log","target","checked","props","changeCheck","delTodo","componentWillMount","todo","map","todoObj","componentWillReceiveProps","render","backgroundColor","isDone","name","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAC1CE,MAD0C,GACjC,CAACC,KAAD,EAAQC,EAAR,KAAe;AACtB,aAAO,MAAM;AACX,aAAKC,QAAL,CAAc;AACZ,WAACD,EAAD,GAAMD;AADM,SAAd;AAGD,OAJD;AAKD,KAPyC;;AAAA,SA6B1CG,UA7B0C,GA6B7BF,EAAE,IAAI;AACjB,aAAOG,CAAC,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ,EAAgBG,CAAC,CAACG,MAAF,CAASC,OAAzB;AAEA,aAAKC,KAAL,CAAWC,WAAX,CAAuBT,EAAvB,EAA2BG,CAAC,CAACG,MAAF,CAASC,OAApC;AACD,OAJD;AAKD,KAnCyC;;AAAA,SAsC1CG,OAtC0C,GAsCjCV,EAAD,IAAQ;AACZ,YAAM;AAACU,QAAAA;AAAD,UAAU,KAAKF,KAArB;AAEAE,MAAAA,OAAO,CAACV,EAAD,CAAP;AAEH,KA3CyC;AAAA;;AAS1CW,EAAAA,kBAAkB,GAAG;AACnB;AACA,SAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoBC,OAAO,IAAI;AAC7B,WAAKb,QAAL,CAAc;AACZ,SAACa,OAAO,CAACd,EAAT,GAAc;AADF,OAAd;AAGD,KAJD;AAKD;;AAEDe,EAAAA,yBAAyB,CAACP,KAAD,EAAQ;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAD+B,CAE/B;;AACAG,IAAAA,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAeC,OAAO,IAAI;AACxB,WAAKb,QAAL,CAAc;AACZ,SAACa,OAAO,CAACd,EAAT,GAAc;AADF,OAAd;AAGD,KAJD;AAKD,GA1ByC,CA4B1C;;;AAmBAgB,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAW,KAAKJ,KAAtB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGI,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AACnB,4BACE;AACE,UAAA,KAAK,EAAE;AACLG,YAAAA,eAAe,EAAE,KAAKlB,KAAL,CAAWe,OAAO,CAACd,EAAnB,IAAyB,MAAzB,GAAkC;AAD9C,WADT;AAKE,UAAA,YAAY,EAAE,KAAKF,MAAL,CAAY,IAAZ,EAAkBgB,OAAO,CAACd,EAA1B,CALhB;AAME,UAAA,YAAY,EAAE,KAAKF,MAAL,CAAY,KAAZ,EAAmBgB,OAAO,CAACd,EAA3B,CANhB;AAAA,kCAQE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEc,OAAO,CAACI,MAFnB;AAGE,cAAA,QAAQ,EAAE,KAAKhB,UAAL,CAAgBY,OAAO,CAACd,EAAxB;AAHZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAA,wBAAOc,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAgBE;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACb,mBAAKT,OAAL,CAAaI,OAAO,CAACd,EAArB;AACD,aAJH;AAKE,YAAA,KAAK,EAAE;AACLoB,cAAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWe,OAAO,CAACd,EAAnB,IAAyB,cAAzB,GAA0C;AAD9C,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA,WAIOc,OAAO,CAACd,EAJf;AAAA;AAAA;AAAA;AAAA,gBADF;AA8BD,OA/BA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD;;AAtFyC","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport default class List extends Component {\r\n  change = (state, id) => {\r\n    return () => {\r\n      this.setState({\r\n        [id]: state\r\n      });\r\n    };\r\n  };\r\n\r\n  componentWillMount() {\r\n    //   在渲染吧前，先预存一个状态的默认值\r\n    this.props.todo.map(todoObj => {\r\n      this.setState({\r\n        [todoObj.id]: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"只想到了这里  willUpdate\");\r\n    //   在渲染吧前，先预存一个状态的默认值\r\n    props.todo.map(todoObj => {\r\n      this.setState({\r\n        [todoObj.id]: false\r\n      });\r\n    });\r\n  }\r\n\r\n  //  点击桥勾选\r\n  alterState = id => {\r\n    return e => {\r\n      console.log(id, e.target.checked);\r\n\r\n      this.props.changeCheck(id, e.target.checked);\r\n    };\r\n  };\r\n\r\n//   删除操作\r\n  delTodo=(id) => {\r\n      const {delTodo}=this.props\r\n\r\n      delTodo(id)\r\n      \r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    // 解构赋值，拿到props传过来的数据\r\n    const { todo } = this.props;\r\n    return (\r\n      <div className=\"listWrapper\">\r\n        {todo.map(todoObj => {\r\n          return (\r\n            <li\r\n              style={{\r\n                backgroundColor: this.state[todoObj.id] ? \"#eee\" : \"white\"\r\n              }}\r\n              key={todoObj.id}\r\n              onMouseEnter={this.change(true, todoObj.id)}\r\n              onMouseLeave={this.change(false, todoObj.id)}\r\n            >\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todoObj.isDone}\r\n                  onChange={this.alterState(todoObj.id)}\r\n                />\r\n                <span>{todoObj.name}</span>\r\n              </label>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => {\r\n                  this.delTodo(todoObj.id);\r\n                }}\r\n                style={{\r\n                  display: this.state[todoObj.id] ? \"inline-block\" : \"none\"\r\n                }}\r\n              >\r\n                删除\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}